#!/bin/bash

cmd=()
args=()

#debugger
gdb=false
rr=false
massif=false
callgrind=false
perf=false

# general settigns
engine="rocksdb"
port=8529
directory="default"

# options that ease debugging
authentication=false
statistics=false
queues=true

#logging
extra_logging=false
log_direct=true
log_thread=true

starter=false

#parse args
while [[ -n $1 ]]; do
    case "$1" in
        --dir)
            directory="$2"
            shift 2
        ;;
        --full-dir|--fulldir)
            full_data_dir="$2"
            shift 2
        ;;
        --gdb)
            gdb=true
            shift
        ;;
        --rr)
            rr=true
            shift
        ;;
        --perf)
            perf=true
            shift
        ;;
        --massif)
            massif=true
            shift
        ;;
        --callgrind)
            callgrind=true
            shift
        ;;
        --rocksdb)
            engine="rocksdb"
            shift
        ;;
        --mmfiles)
            engine="mmfiles"
            shift
        ;;
        --auth)
            authentication=true
            shift
        ;;
        --no-direct)
            log_direct=false
            shift
        ;;
        --statistics)
            statistics=true
            shift
        ;;
        --port)
            port=$2
            shift 2
        ;;
        --starter)
            starter=true
            shift
        ;;
        *)
            args+=( "$1" )
            shift
    esac
done

source_dir=$(pwd)
dirprefix=${source_dir%/*}
##dirname=${source_dir##*/}

mkdir -p "${source_dir}-data"

full_data_dir="${full_data_dir:-"${source_dir}-data/${directory}_${engine}"}"
echo "running db with data dir: $full_data_dir"

exe_path="./build/bin/arangod"

if [[ ! -x "$exe_path" ]]; then
    echo "exectuable can not be found at $exe_path"
    exit 1
fi

if ! $starter; then

    if $gdb; then
      cmd+=( 'gdb' '--args' )
    fi

    if $rr; then
      cmd+=( 'rr' )
    fi

    if $massif; then
      echo "starting with massif"
      cmd+=( 'valgrind' '--tool=massif'
             '--depth=50' '--detailed-freq=1'
            # '--time-unit=ms'
             '--vgdb=yes'
           )
    elif $callgrind; then
      echo "starting with massif"
      cmd+=( 'valgrind' '--tool=callgrind'
             '--instr-atstart=no'
            # '--time-unit=ms'
             '--vgdb=yes'
           )
    elif $perf; then
      echo "starting with massif"
      cmd+=( 'perf' 'record'
           )
    fi

    for p in $port 5555 7777 8888 9999; do
        if ! nc -z localhost $p ; then
            port=$p
            echo "found free port: $p"
            break
        fi
    done

    echo "using port $port"

    mkdir -p "${full_data_dir}"
    touch "${full_data_dir}/arangod3.log"


    cmd+=( "$exe_path" )
    cmd+=(
        '--server.endpoint' "http+tcp://0.0.0.0:$port"
        '--server.authentication' "$authentication"
        '--server.statistics' "$statistics"
        '--server.storage-engine' "$engine"
        '--foxx.queues' "$queues"
        '--temp.path' "/tmp/obi-$(date +%T)/"
        '--log.force-direct' "$log_direct"
        '--log.foreground-tty' 'true'
        '--log.thread' "$log_thread"
        '-c' 'etc/relative/arangod.conf'
        "${args[@]}"
    )
        #'--javascript.startup-directory' './js'
        #'--log.file' "${full_data_dir}/arangod3.log"

    if $extra_logging; then
        cmd+=(
            '--log.level' 'communication=trace'
            '--log.level' 'requests=trace'
            '--log.level' 'fixme=trace'
        )
    fi


    cmd+=( "${full_data_dir}" )

else
    exe_path="$source_dir/$exe_path"
    js_path="$source_dir/js"
    pwd
    mkdir -p starter_bullshit
    cd starter_bullshit || { echo "can not enter dir"; exit 1; }
    cmd=(
        arangodb-starter-binary
        "--server.arangod" "$exe_path"
        "--server.js-dir" "$js_path"
        "${args[@]}"
    )
fi

echo "# ${cmd[@]}"
"${cmd[@]}"
